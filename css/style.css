/* Load Roboto Font */
@import url('https://fonts.googleapis.com/css?family=Roboto');


/* Variables with CSS Custom Properties */
:root {

    /* Root Scope */
    --primary-color: #003699;
    --dark-color: #333333;
    --light-color: #f4f4f4;
    --lose-color: #dc3545; /* Color when lost */
    --win-color: #28a745; /* Color when won */
    --modal-duration: 1s;  /* Amount of time modal takes to open */

}


/* Simple Reset */

* {

    box-sizing: border-box;
    padding: 0;
    margin: 0;

}

/* CSS reset explanation:

    This considered a "CSS reset" or "CSS normalization." 
    
    It aims to remove default padding, margin, and box-sizing inconsistencies 
    across browsers. Here's a breakdown of each rule:

    * (Universal Selector): 
    Applies the rules to all elements.

    box-sizing: border-box;: 
    Ensures padding and borders are included within the element's 
    specified width and height, making layout calculations more 
    predictable.

    padding: 0; and margin: 0;: 
    Removes any default padding and margin applied 
    by the browser, preventing unwanted spacing.

*/


body{

    font-family: 'Roboto', sans-serif;
    line-height: 1.6;
    background: #fff;
    color: #333;
}

.container{

    max-width: 550px; /* To make responsive */
    margin: auto; /* Move to middle */
    overflow: hidden;
    padding: 0 2rem; /* Left & Right padding */
    text-align: center;

}

/* Why Use rem?

Using rem is helpful for responsive design, as it enables you to adjust 
the entire document's scale by changing just the root font size. 

It also provides greater consistency across different elements compared 
to using em, which is relative to the parent element’s font size.

In CSS, rem stands for “root em” and is a unit of measurement relative to 
the font size of the root element (<html>). 

Here’s how it works:

    1 rem equals the font size of the root (<html>) element.

    If the root font size is set to 16px (the default in most browsers), 
    then 1 rem equals 16px.

    All elements using rem units will scale relative to the root font size, 
    providing consistency and easy scaling throughout your design.

*/


.restart-btn{

    display: none; /* Initially hidden */
    background: var(--light-color); /* Add from variable */
    color: #333;
    padding: 0.4rem 1.3rem ; /* Top-Bottom & Left-Right */
    font-size: 1rem;
    cursor: pointer;
    outline: none;
    border: none;

}

.restart-btn:hover{

    background: var(--primary-color);
    color: #fff;

}


.header{

    text-align: center;
    margin: 1rem 0; /* Top & Bottom */
    
}

.header h1{

    margin-bottom: 1rem;

}

.score{

    display: grid;
    grid-template-columns: repeat(2, 1fr); /* 2 even columns */
    font-size: 1.2rem;
    color: #fff;

}

.score p:first-child{

    background: var(--primary-color);

}

.score p:last-child{

    background: var(--dark-color);

}